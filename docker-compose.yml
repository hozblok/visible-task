version: '3'

services:
  postgres:
    image: postgres:14.4-alpine3.16
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    expose:
      - 5432
    volumes:
      - ./postgres_volume:/var/lib/postgresql/data

  nginx:
    image: nginx
    container_name: nginx
    build:
      context: ./nignx
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      # TODO: Delete me after adding a build process inside this container.
      - ./nginx/crawler_ui/build:/app
    ports: [ "8080:80" ]
    environment:
      NGINX_PORT: "80"
      NGINX_ENVSUBST_OUTPUT_DIR: "/etc/nginx"
    restart: always

  crawler-service:
    image: crawler-service
    container_name: crawler-service
    build:
      context: ./crawler_service
      target: crawler_service
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_SERVER: ${POSTGRES_SERVER}
      SECRET_KEY: ${SECRET_KEY}
    restart: always
    command: gunicorn crawler.asgi:application  -b 0.0.0.0:8000 -w 4 -k uvicorn.workers.UvicornWorker
    depends_on:
      - postgres
      - migration

  migration:
    image: crawler-service-migration
    build:
      context: ./crawler_service
    command: python /visible/manage.py migrate --noinput
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_SERVER: ${POSTGRES_SERVER}
      SECRET_KEY: ${SECRET_KEY}
    restart: on-failure
    volumes:
      - ./crawler_service/crawler:/visible/crawler
    depends_on:
      - postgres
